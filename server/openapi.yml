openapi: "3.0.1"

info:
  title: "sproot"
  version: "0.0.1"
  description: "Sproot API documentation"

security:
  - bearerAuth: []

paths:
  /api/v1/authenticate:
    post:
      tags:
        - "Authenticate"
      description: "Generate a token for authentication. Sent as both a cookie and in the response body."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Authentication successful"
                  statusCode:
                    type: integer
                    example: 200
                  JWTtoken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjk1NjkyMTA3LCJleHAiOjE2OTU2OTIzNjZ9.KgJ0mWBVUNyN4io2TrHZf-zxPlt-PZh4Hc7ysYAXipE"
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing username or password"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"

  /api/v1/sensors:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Get information for all sensors."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sensor information successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  sensors:
                    $ref: "#/components/schemas/Sensors"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
    post:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Add a new sensor."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  nullable: true
                model:
                  type: string
                  example: "BME280"
                address:
                  type: string
                  example: "0x76"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sensor successfully added"
                  statusCode:
                    type: integer
                    example: 201
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid model or address"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/sensors/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Get information for a single sensor."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The sensor's id.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sensor information successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  sensor:
                    $ref: "#/components/schemas/Sensor"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No sensor found with that Id"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Delete a sensor."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The sensor's id.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sensor successfully deleted"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No sensor found with that Id"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
    put:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Update a sensor."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The sensor's id.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  nullable: true
                model:
                  type: string
                  example: "BME280"
                  nullable: true
                address:
                  type: string
                  example: "0x76"
                  nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sensor successfully updated
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update sensor, invalid request"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid or Missing JWT
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No sensor found with that Id
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/sensors/{id}/readings:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Get information for a single sensor."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The sensor's id.
        - in: query
          name: offset
          schema:
            type: integer
          description: Reading offset. Inclusive.
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of readings to grab.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sensor readings successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  readings:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reading"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No sensor found with that Id"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to retrieve sensor readings, invalid request"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/sensors/chart-data:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
        - "Chart"
      description: "Gets information for displaying recharts."
      parameters:
        - in: query
          name: readingType
          schema:
            type: string
          description: The ReadingType to get.
        - in: query
          name: offset
          schema:
            type: integer
          description: Reading offset. Inclusive.
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of readings to grab.
        - in: query
          name: latest
          schema:
            type: boolean
          description: If true, only the latest reading(s) will be returned. Overrides offset and limit.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "chartData successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  readings:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChartData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No data found for the passed type"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to retrieve chart data, invalid request"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/sensors/supported-models:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Sensors"
      description: "Get a list of all supported sensor models."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Supported sensor models successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  models:
                    type: array
                    items:
                      type: string
                    example: ["BME280", "DS18B20"]
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string

  /api/v1/outputs:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Outputs"
      description: "Get information for all outputs."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Output information successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  outputs:
                    $ref: "#/components/schemas/Outputs"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
    post:
      security:
        - bearerAuth: []
      tags:
        - "Outputs"
      description: "Add a new output."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  example: "pca9685"
                address:
                  type: string
                  example: "0x40"
                description:
                  type: string
                  nullable: true
                pin:
                  type: integer
                  example: 1
                isPwm:
                  type: boolean
                  example: true
                isInvertedPwm:
                  type: boolean
                  example: false
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Output successfully added"
                  statusCode:
                    type: integer
                    example: 201
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid output data"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
                    example: "Address must be a string."
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/outputs/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Outputs"
      description: "Get information for a single output."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The output's id.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Output information successfully retrieved"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  sensor:
                    $ref: "#/components/schemas/Output"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No output found with that Id"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Outputs"
      description: "Delete an output."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The output's id.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Output successfully deleted"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or Missing JWT"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No output found with that Id"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
    put:
      security:
        - bearerAuth: []
      tags:
        - "Outputs"
      description: "Update an output."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The output's id.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  nullable: true
                model:
                  type: string
                  example: "pca9685"
                  nullable: true
                address:
                  type: string
                  example: "0x40"
                  nullable: true
                pin:
                  type: integer
                  example: 1
                  nullable: true
                isPwm:
                  type: boolean
                  example: true
                  nullable: true
                isInvertedPwm:
                  type: boolean
                  example: false
                  nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Output successfully updated
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to update output, invalid request"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid or Missing JWT
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No output found with that Id"
                  statusCode:
                    type: integer
                    example: 404
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/outputs/{id}/control-mode:
    post:
      tags:
        - "Outputs"
      description: "Update an output's control mode, updating physical output states accordingly."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The output's id.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                controlMode:
                  type: string
                  enum:
                    - "manual"
                    - "schedule"
              required:
                - controlMode
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Control mode successfully updated"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid control mode"
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
  /api/v1/outputs/{id}/manual-state:
    post:
      tags:
        - "Outputs"
      description: "Update an output's manual state. Does not change control mode."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The output's id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/State"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Manual state successfully updated"
                  statusCode:
                    type: integer
                    example: 200
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid state data."
                  statusCode:
                    type: integer
                    example: 400
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"
                  suggestion:
                    type: string
                    example: "Value must be a number between 0 and 100."
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
                  statusCode:
                    type: integer
                    example: 401
                  timeStamp:
                    type: string
                    example: "2021-01-01T00:00:00.000Z"

  /api/v1/outputs/supported-models:
      get:
        security:
          - bearerAuth: []
        tags:
          - "Outputs"
        description: "Get a list of all supported output models."
        responses:
          "200":
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Supported output models successfully retrieved"
                    statusCode:
                      type: integer
                      example: 200
                    timeStamp:
                      type: string
                      example: "2021-01-01T00:00:00.000Z"
                    models:
                      type: array
                      items:
                        type: string
                      example: ["PCA9685"]
          "401":
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Invalid or Missing JWT"
                    statusCode:
                      type: integer
                      example: 401
                    timeStamp:
                      type: string
                      example: "2021-01-01T00:00:00.000Z"
                    suggestion:
                      type: string                    

components:
  schemas:
    Sensors:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Sensor"

    Sensor:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
          nullable: true
        model:
          type: string
          example: "BME280"
        address:
          type: string
          example: "0x76"
          nullable: true
        lastReading:
          type: object
          properties:
            temperature:
              type: string
              example: "25.0"
            humidity:
              type: string
              example: "50.0"
            pressure:
              type: string
              example: "1000.0"
        lastReadingTime:
          type: string
          example: "Mon, 25 Sep 2023 02:17:58 GMT"
        units:
          type: object
          properties:
            temperature:
              type: string
              example: "°C"
            humidity:
              type: string
              example: "%rH"
            pressure:
              type: string
              example: "hPa"

    Outputs:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Output"

    Output:
      type: object
      properties:
        id:
          type: integer
        model:
          type: string
          example: pca9685
        address:
          type: string
          example: "0x40"
        description:
          type: string
          nullable: true
        pin:
          type: integer
          example: 1
        isPwm:
          type: boolean
          example: true
        isInvertedPwm:
          type: boolean
          example: false
        manualState:
          $ref: "#/components/schemas/State"
        scheduleState:
          $ref: "#/components/schemas/State"
        controlMode:
          type: string
          enum:
            - "manual"
            - "schedule"
          example: "manual"

    State:
      type: object
      properties:
        value:
          type: integer
          example: 75
          minimum: 0
          maximum: 100
          multipleOf: 1
      required:
        - "value"

    Reading:
      type: object
      properties:
        metric:
          type: string
          example: "temperature"
        data:
          type: string
          example: "25.0"
        units:
          type: string
          example: "°C"
        logTime:
          type: string
          example: "2023-01-01 12:00:00"

    ChartData:
      type: object
      properties:
        name:
          type: string
          example: "1/20 12:00 pm"
        units:
          type: string
          example: "°C"
        sensor1:
          type: number
          example: 25.0
        sensor2:
          type: number
          example: 25.0

  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
