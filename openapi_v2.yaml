openapi: "3.0.1"

info:
  title: "sproot"
  version: "0.0.1"
  description: "Sproot API documentation"


paths:
  /api/v2/ping:
    get:
      tags:
        - "Ping"
      summary: "Ping the server"
      description: "Returns a simple 'pong' response."
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Success"
                  - properties:
                      content:
                        properties:
                          data:
                            example: "pong"
                                
  /api/v2/sensors/:
    get:
      tags:
        - "Sensors"
      summary: "Get all sensors"
      description: "Returns a list of all sensors."
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Success"
                  - properties:
                      content:
                        properties:
                          data:
                            items:
                              $ref: "#/components/schemas/SensorBase"
                              
  
  /api/v2/sensors/{id}:
    get:
      tags:
        - "Sensors"
      summary: "Get sensor by ID"
      description: "Returns a sensor by ID."
      parameters:
        - in: path
          name: id
          required: true
          description: "Sensor ID"
          schema:
            type: string
          example: "1"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Success"
                  - properties:
                      content:
                        properties:
                          data:
                            items:
                              $ref: "#/components/schemas/SensorBase"

        404:
          description: "Sensor not found"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Error"
                  - properties:
                      statusCode:
                        example: 404
                      error:
                        properties:
                          name:
                            example: "Not Found"
                          fullPath:
                            example: "/api/v2/sensors/-1"
                          details:
                            items:
                              example: "Sensor with ID -1 not found."
                

  # /api/v2/sensors/chart-data:
  #   get:
  #     tags:
  #       - "Sensors"
  #       - "Charts"
  #     summary: "Get chart data"
  #     description: "Returns chart data for all sensors."
  #     responses:
  #       200:
  #         description: "Success"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/Success"

  /api/v2/sensors/supported-models:
    get:
      tags:
        - "Sensors"
      summary: "Get supported models"
      description: "Returns a list of supported sensor models."
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"

components:
  schemas:
    ApiResponse:
      type: object
      required:
        - "statusCode"
        - "timestamp"
        - "requestId"
      properties:
        statusCode:
          type: integer
        timestamp:
          type: string
          example: "2021-01-01T00:00:00.000Z"
        requestId: 
          type: string
          example: "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"

    Success:
      allOf:
        - $ref: "#/components/schemas/ApiResponse"
        - type: object
          properties:
            statusCode:
              type: integer
              example: 200
            content:
              type: object
              required:
                - "data"
              properties:
                data:
                  anyOf:
                    - $ref: "#/components/schemas/SupportedModels"
                    - type: array
                      items:
                        $ref: "#/components/schemas/SensorBase"
                    - type: string
                    - type: number
                    - type: integer
                    - type: boolean
                    - type: array
                    - type: object
                # moreDataAvailable:
                #   type: boolean
                #   example: false

    Error:
      allOf:
        - $ref: "#/components/schemas/ApiResponse"
        - type: object
          required:
            - "error"
          properties:
            statusCode:
              type: integer
            error:
              type: object
              properties:
                name:
                  type: string
                details:
                  type: array

    SensorBase:
      type: object
      required:
        - "id"
        - "name"
        - "model"
        - "address"
        - "lastReading"
        - "lastReadingTime"
        - "units"
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Windowsill"
        model:
          type: string
          example: "DS18B20"
        address:
          type: string
          example: "28-00000"
        lastReading:
          type: object
          properties:
            temperature:
              type: string
              example: "23.5"
        lastReadingTime:
          type: string
          nullable: true
          example: "2021-01-01T00:00:00.000Z"
        units:
          type: object
          properties:
            temperature:
              type: string
              example: "C"

    SupportedModels:
      type: array
      items:
        type: string